\section{Редакторское.}

% текущая состояние правки: редактируется часть по арх-ре.
\label{section_paper_workflow}

эту глава полностью посвещена редакторской правке и ведению версий документа, по смысловой нагрузке статьи тут практически ничего нет.

\subsection{Замечания, комментарии, пожелания участников.}

\subsubsection{неотсортированное}
в процессе: надо отразить деятельность гугла и прочих поисковиков по поиску сайтов которые могут инсталировать ботов.\\

Надо аннотировать осмысленность одновременного использования определенных трюков против аверов.
% Насколько я понимаю при использовании упаковки известными пакерами малоосмысленным будет использование одновременно и морфера и пакера?

Видимо есть смысл ввести отдельную категорию для сети распространителей дропперов:
\begin{verbatim}
A web security firm has identified roughly 40,000 legitimate websites that cybercriminals have hacked to redirect visitors to an exploit site called Beladen. Similar to the Gumblar attacks, the hacked websites point to a domain where visitors are infected with malware.
Beladen and Gumblar now appear to mark a new trend - mass compromises of websites that convert them into a type of botnet of infected sites, rather than botnets of hacked PCs, security experts said.
The Beladen domain attempts to infect PCs through older, vulnerable browser versions and third-party applications like QuickTime and Winzip.\\
\end{verbatim}

Надо отдельную главу по профилированию сценариев атак (spreading models).\\

Также надо отдельную главу по векторам атак, это не тоже что профилирование, в ней в т.ч. про флэш.\\

Нужно отметить по техникам сканирования - скан большого адресного пространства
будет гарантрованно давать алерт по трафику на ISPs.\\

Надо уделить внимание адекватному морфингу и апдейту дропперов.\\

Вставить вот это в часть по обнаружению:
\begin{verbatim}
можно. в простейшем случае поднимается файл ntosrknl.exe (или какой там работает) с диска, и сравнивается с его образом в памяти. Кстати, руткит Rustok при таком методе отдает подложные данные, и например GMER (антируткит) ничего не видит )

Также берется таблица системных вызовов и в них ищутся адреса, выходящие за пределы образа ntoskrnl в памяти. Найти модуль, на который они ссылаются, довольно просто.
\end{verbatim}

Обсудить выбор типа драйвера при создании r/k.

\begin{verbatim}
NT-драйвер или legacy-драйвер это модель драйверов, разработанная для Windows NT 3.1. Работает на всей линейке NT, вплоть до последних (XP, Vista).
Legacy они называются в противоположность Windows Driver Model (WDM) — модели драйверов, совместимые с Windows 98/ME/2000/XP/Vista.
У Vista имеется собственный вариант модели драйверов Windows Driver Foundation
\end{verbatim}

По поводу автозагрузки в венде - url http://support.microsoft.com/kb/115486 сравнить с даннными с indetails.info .

\\
Несколько абзацев/параграф по поводу повторения себя и способа избежать этого за счет реализации собственной виртуалки, тогда далее разрабатывается версия проксификатора виртуалки к ядру, а payload в виртуалке будет универсальным, проще будет вынести  т.е. переносимым.В идеале приспособить gpl/bsd проект. Ява машину видимо не выйдет - уж очень много весит.\\

ввести главу трюки с описанием не попадавшихся трюков для маскировки данных и прочее. Первым примером - реализация собственной фс поверх temp folder garbage files - удаление = создание + не отжирать место при проблемах с местом на диске.\\

сделать главу по основам архитектуры осей с точки зрения инсталляции руткитов
сделать главу с перечислением проблем при задачах руткита.
после классификации руткитов определить какой тип концептнее

SelfSplicing in NT arch.\\

Ввести главу useless. Первым туда вписать неснимаемый сплайсинг\\

Ввести главу обсуждаемая методика, первым делом туда вопрос насколько актуальна реализация самовосстановления (перезапписывать свои прологи функций чтобы избежать сполайсинга другими зловредами)\\

Ввести в качестве требования стабильное соседство с другими зловредами, а именно такая работа, при которой если систему заразила другая малварь в том числе с руткитоподобными замашками наш концептный руткит не перестал работать и не свалил систему в бсод - мулти-инфицированный case.\\
Ввести главу дезайн ботнета как сети - бэкенды и фронтенды, прокси, тунели и т.п.\\

Хороший руткит это не только грамотный дизайн, но и продуманное развитие, то есть никто не напишет сразу грамотную
полную реализацию - программам свойственно развиваться по мере изменения требований, среды и улучшения концепций,
в ӕтом контексте надо основываться на том, что развивается вычислитекльная мощь, идет интеграция в сети, растут объемы и хранилища данных. Шаблоны работы как в корпоративных средах - тонкий/толстый клиент, распределение нагрузки. Подыскать природные аналогии.\\

Нарисовать схемы трафа в сети с участием контроллеров и указанием мест где можно применять шифрование чтобы избежать поимки на Open Proxy Honeypot (http://projects.webappsec.org/Distributed-Open-Proxy-Honeypots#ProjectOverview)\\

Расширить перечисление payload к реализации во второй части rfc.\\

payload: ssh keys grabs.

Обязательно к реализации - статистический анализ ботов на предмет выделения удачных заражений, например, админских
машинок и прочих ключевых узлов. Как минимум скоринг по типу ОС и установленных приложений в отчете о себе серверу.\\

 enumerate типичные задачи зловреда в абстрактной OS для того чтобы в дальнейшем по ним специфицировать апи
 vbox'а.

преимущество vbox'а - не надо делить usermode с сторонними программами, заведомо изолированная от прочей малвари среда, при этом по прежнему возможно запускать payload на userlevel, что упрощает программирование. Разделение на уровни, ввод проксирующей прослойки, layering процесса программирования позволит разносить задачи в рамках коллектива, сохранит payload.работоспособным при переходе с оси на ось и (частично в меру осмысленности) при переходе с платформы на платформу. Позволит легче адаптировать куски ПО с BSD/GNU лицензией и украденные проприетарные исходники к своим задачам. Стройки делают по кусочкам, факт.
Позволит реализовать примитивы и интерфейсы
На первое время придется отказаться от скорости (накуй она нужна во всех payload'ах кроме кейлоггеров и скриншотов?),
когда интерфейсы устоятся можно будет заняться оптимизацией.

musthave: detect интеллектуальных сетей (cisco) => raise the danger bar.\\

opensource vbox vs selfmade.\\

Обязательно реализовать тюнинг отъедаемого ресурса на ноутбуках\\

разница в подходах уметь все потихоньку или выделить правильное by design и не тратить время на остальное - всех
денек не заработаешь, все не запрограммишь.\\

payload: сбор лицензий к купленному юзверем софту.

ботнеты на точках доступа, принтерах и прочем популярном железе, в т.ч. на корпоративных управлялках (apc default & so on).

Глава или подглава про перспективы и порядок разработки - перспектива в сторону вирьуальной машины.\\

В главе с антиотладочными трюками подчеркнуть, что в первую очередь надо противодействовать автоматизации анализа
реверсером.\\

втавить как один из актуальных анонимных способов инжекта дропперов:

There is an extremely low barrier entry for an adversary to configure a Tor exit node and start injecting malicious traffic. \\

Как один из payloads - обрыв tcp сессий на основе облома tcp handshake и аналогично для уже установленных соединений.\\

Обзор встроенных в ОС средств защиты:\\

DEP (Data Execution Prevention)\\
NX (advanced DEP in Vista = NX?).\\
ASLR - случайные адреса системных библиотек в памяти начиная с висты.\\
PatchGuard - защита IDT/GDT?\\
Driver Signing - 2k+ .\\
Windows Service Hardening - vista+ ?\\

В главу о триках:\\
отложенный подсос жабаскриптов - жабаскрипт с payload подсасывается только спустя существенное время работы с сайтом. Лучше всего будет работать с сайтами типа поисковиков и халявого мыла. Если жабаскриптом можно достоверно проверять время, то супер. Как альтернатива - тоже самое, но с флешем.\\

В главу о триках:\\
Анализ капчи для недалеких пользователей можно представлять как фичу интерфейса, которой реально нет на сайтах,
которые не имеют капчи - пользователь увидит капчу как якобы новую фичу сайта. Еще лучше - подмена реальной
капчи нужной к распознаванию, после чего выдается сообщение об ошибке и выдается уже реальная капча сайта. При должной поддержке может реально дать profit. =)

завести отдельную главу FAQ в режиме Q/A - туда пихать уточнения из IM conversations.

\subsubsection{Не подлежит правке}
\label{wonnt_fix}
\paragraph{1.\\}
{\bf Note:} Присутствует копипаст некоторых предложений (например, в конце описания вируса и червя).\\
{\bf Answer:} Для глоссария это нормально. Если есть в других местах - присылайте ссылки - возможно поправим.

\paragraph{2.\\}
{\bf Note:} В глоссарии нет необходимости объяснять базовые понятия (ОС, C/CPP, атака, LAN, Internet, IE, ...) - если человек получил этот RFC и заинтересован в прочтении, он наверняка знаком
 с этими понятиями.\\
{\bf Answer:} Если внимательно посмотреть на подраздел \ref{reading_notice} на стр. \pageref{reading_notice} - будет видно, что статья частично может быть полезна для:\\
Управляющего персонала среднего и высшего звена, \\
Заказчика практической реализации описываемых в данной статье принципов \\
Эти две категории людей не обязательно знакомы с базовыми понятиями в контексте рассматриваемых в статье вопросов.

\subsection{Комментарии вследсвие невнимательного прочтения:\\}
\label{miss_of_attention}

\paragraph{1\\}
\begin{verbatim}
>anti-forensics - tozhe mozhesh opisat'... poleznaya shtuka\\
>est' anti-forensics rootkits. oni na disk toka loader kladut, vse ostalnoe kachayut\\
>i zapuskayut v pamyati na diske nichego ne sokhranyaetsya, razve chto VM/swap
\end{verbatim}
В статье описывается как один из методов противодействия - in memory only paiload (см. \ref{in_mem_only_payload} на стр. \pageref{in_mem_only_payload}). Добавлено уточнение, что
эта методика известна как <<anti-forensics>>.

\paragraph{2\\}

\begin{verbatim}
>> vremya - sistema u moego kenta prosto uskoryaet timer kompa..t.e. vremya na kompe idet' bistree
> с синхрой по ntp это не поможет
>>nu, esli NTP na firewalle otkrit - da, a esli net?
Если Вы внимательно читали - предлагается иметь в протоколе закладка-CC уведомление о времени
>> XXXX: ne ponyal eto predlozhenie :)
> CC - C\&C - управляющий сервак
\end{verbatim}


\subsubsection{Поправим когда нибудь потом..}

{\bf Note:}   Слишком много сносок, особенно сносок, состоящих из двух-трех слов, когда можно развернуть мысль в самом тексте.\\
{\bf Answer:} Так исторически сложилось. Постараемся делать меньше сносок. Собственно, как только теоретическая часть устаканится, можно будет поставить в 2do героическое усилие по переписыванию текста. Пока же это слишком накладно, но, когда попадается под руку стараемся убирать.
 Впрочем, если какие-то моменты со сносками слишком режут глаза - присылайте перефразированный вариант - если он будет не хуже - заменим.

\subsubsection{2fix / Планируется переделать}
\label{paper_2do_1}

\paragraph{Высокий приоритет\\}

\subparagraph{Note:} Лучше указать, о каких осях ведется разговор - идет обсуждение общих вопросов,
результаты которых могли бы быть применимы для любых ОС, но в примерах используется
Windows. Наверное, стоит указать, что речь идет о Windows.
\subparagraph{Note:} Не использовать "я", "по моему мнению", "на мой взгляд" и т.д. или заменить их на другие обороты - это ведь RFC.
\subparagraph{Note:} Иногда аббревиатуры обозначаются строчными буквами, например "it" .

\paragraph{Низкий приоритет\\}

\subparagraph{Note} Понятия в глоссарии лучше каким-то образом отсортировать. По алфавиту, например.
\subparagraph{2do.1} - поделить глоссарий на простейшие и specific/advanced термины, сделать сортировку глоссария в рамках подразделов.
\subparagraph{2do.2} - часто употребляются в одних и тех же значениях термины <<бот>> и <<закладка>> . Убрать из аналитической части не связанной с описанием конкретных примеров термин <<бот>> - заменить на <<закладка>>, по возможности прошерстить на предмет более академического языка все, что не связано с описанием конкретных примеров.

\subsection{Планируется рассмотреть/сделать/добавить}
\label{paper_2do_2}

\paragraph{Высокий приоритет\\}
Боле-менее интелектуальный генератор diff'ов к предыдущей версии - перечитывать
все заново с каждой версией никому не интересно, а просматривать текущий вариант
главы (\ref{diff_from_prev_ver}) - очень неудобно.\\
peer2peer botnets\\
расписать подробно отдельную главу по архитектуре - пока есть только заголовок.\\
классификацию руткитов по типам в зависимости от времени жизни, работы с диском, ring0, ring0+ring3 и другие варианты, упоминание общепринятых классификаций, видимо уйдет в главу по архитектуре.\\
прошерстить и выдрать полезное из описания bootkit в кашперском.\\
описание fastflux технологии и способов маскировки и отложенной загрузки с использованием dns, в том числе того,
что упустили создатели имеющихся сегодня и в прошлом фастфлюкс-драйвен ботнетов.\\
перечисление векторов атак и их пересечений\\

\paragraph{Средний приоритет\\}
В комплекте с rfc сделать архив из материалов на которые rfc ссылается в глоссарии и тексте чтобы
позволить изучать материалы без подключения к интернет. Материалы архива и ссылки поделить на несколько
уровней по сложности, например фундаментальное (алгоритмы, математика, криптография - Шнаера видимо туда)
 + обзорное для специалистов (положить ru.crypto faq?) + обзорное для.управленцев
( если найдется что-то тезисно-понятийное в двух словах).

\paragraph{Низкий приоритет\\}
более подробное описание traffic anomaly detection (по мотивам статьи Botnets: the killer web app
- там по отчетам ourmon можно уточнить детали.)\\
картинки с описаниями алгоритмов и прочего - если у кого есть желание нарисовать - welcome.\\
автогенератор презентации из исходников статьи.\\
Разработать на будущее шаблон в латех для генерации единого документа по мотивам 3х частей rfc,
возможно сделать генерацию одного xml документа из latex исходников (будет не менее 3х частей rfc)
 с автосозданием кросс-ссылок между ними.


\subsection{Please help}

Надо пополнить перечисление антивирусов в \ref{antiviruses} и оценить их эффективность в борьбе с руткитами (с указанием даты на которую эта оценка актуальна).\\
Надо пополнить перечисление специальных антируткит средств в \ref{antirootkittool} (стр. \pageref{antirootkittool})\\
Очень много повторений одних и тех же мыслей в разных разделах - присылайте комментарии о повторениях - что (глава/пункт/страница) повторяется где (глава/пункт/страница).\\
Будем рады также текстам по задачам предыдущего параграфа.\\

\subsection{Изменения с предыдущей версии}

Статья перешла в teamwork, {\bf \copyright } перешел к NetHack club.\\

Получены и учтены замечания от нескольких человек. Если Вы один из них и желаете
оставить в статье какие либо данные о себе как об участнике разработки документа - пишите
maintainer'у.\\

Добавилась редакторская глава - для удобства анонсирования изменений и ведения версий.\\

Дополнилась библиография, но пока в ней только часть того что требует внимания - появилось довольно
много неплохого материала по ботнетам, чего не было на момент первоначальной версии этой статьи - надо
перешерстить и вписать достойные внимания статьи. \\

Немного подправлен и расширен глоссарий.\\

Статья поделена на части - в отдельную статью вынесено детальное техническое описание набора требований к
 качественному руткит - все описание мотивации требований второй части находится в первой (этой).\\

Сделано:\\
Добавлено описание(краткое перечисление) модели угроз на сервере и закладке плюс для ботнета в целом.\\
обзор противодействия отладке и дизассемблированию\\
глава по противодействию антивирусам.\\
поправлена автогенерация pdf - буквы теперь не должны наезжать друг на друга.\\

